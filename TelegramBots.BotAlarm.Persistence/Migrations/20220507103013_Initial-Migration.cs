// <auto-generated>

#nullable disable

namespace TelegramBots.BotAlarm.Migrations
{
    using System;

    using Microsoft.EntityFrameworkCore.Migrations;

    public partial class InitialMigration : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "alarm");

            migrationBuilder.CreateTable(
                name: "AlarmLogs",
                schema: "alarm",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    EventType = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AlarmLogs", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Chats",
                schema: "alarm",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TelegramId = table.Column<long>(type: "bigint", nullable: false),
                    Type = table.Column<int>(type: "int", nullable: false),
                    Settings_BroadcastMessageDuringAlarm = table.Column<bool>(type: "bit", nullable: false),
                    Settings_BlockChatDuringAlarm = table.Column<bool>(type: "bit", nullable: false),
                    Settings_BlockChatDuringCurfew = table.Column<bool>(type: "bit", nullable: false),
                    Status_BlockedDuringAlarm = table.Column<bool>(type: "bit", nullable: false),
                    Status_BlockedDuringCurfew = table.Column<bool>(type: "bit", nullable: false),
                    Title = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Username = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FirstName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LastName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Bio = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    InviteLink = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SlowModeDelay = table.Column<int>(type: "int", nullable: true),
                    LinkedChatId = table.Column<long>(type: "bigint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Chats", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "CurfewLogs",
                schema: "alarm",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    EventType = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CurfewLogs", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ServiceLogs",
                schema: "alarm",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    ServiceType = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ServiceLogs", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "AlarmLogMessages",
                schema: "alarm",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MessageId = table.Column<int>(type: "int", nullable: false),
                    MessageText = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AlarmLogId = table.Column<int>(type: "int", nullable: false),
                    ChatId = table.Column<int>(type: "int", nullable: false),
                    DateTime = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AlarmLogMessages", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AlarmLogMessages_AlarmLogs_AlarmLogId",
                        column: x => x.AlarmLogId,
                        principalSchema: "alarm",
                        principalTable: "AlarmLogs",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_AlarmLogMessages_Chats_ChatId",
                        column: x => x.ChatId,
                        principalSchema: "alarm",
                        principalTable: "Chats",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "CurfewLogMessages",
                schema: "alarm",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MessageId = table.Column<int>(type: "int", nullable: false),
                    MessageText = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CurfewLogId = table.Column<int>(type: "int", nullable: false),
                    ChatId = table.Column<int>(type: "int", nullable: false),
                    DateTime = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CurfewLogMessages", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CurfewLogMessages_Chats_ChatId",
                        column: x => x.ChatId,
                        principalSchema: "alarm",
                        principalTable: "Chats",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_CurfewLogMessages_CurfewLogs_CurfewLogId",
                        column: x => x.CurfewLogId,
                        principalSchema: "alarm",
                        principalTable: "CurfewLogs",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_AlarmLogMessages_AlarmLogId",
                schema: "alarm",
                table: "AlarmLogMessages",
                column: "AlarmLogId");

            migrationBuilder.CreateIndex(
                name: "IX_AlarmLogMessages_ChatId",
                schema: "alarm",
                table: "AlarmLogMessages",
                column: "ChatId");

            migrationBuilder.CreateIndex(
                name: "IX_Chats_TelegramId",
                schema: "alarm",
                table: "Chats",
                column: "TelegramId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_CurfewLogMessages_ChatId",
                schema: "alarm",
                table: "CurfewLogMessages",
                column: "ChatId");

            migrationBuilder.CreateIndex(
                name: "IX_CurfewLogMessages_CurfewLogId",
                schema: "alarm",
                table: "CurfewLogMessages",
                column: "CurfewLogId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "AlarmLogMessages",
                schema: "alarm");

            migrationBuilder.DropTable(
                name: "CurfewLogMessages",
                schema: "alarm");

            migrationBuilder.DropTable(
                name: "ServiceLogs",
                schema: "alarm");

            migrationBuilder.DropTable(
                name: "AlarmLogs",
                schema: "alarm");

            migrationBuilder.DropTable(
                name: "Chats",
                schema: "alarm");

            migrationBuilder.DropTable(
                name: "CurfewLogs",
                schema: "alarm");
        }
    }
}
