// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using TelegramBots.BotAlarm.Persistence;

#nullable disable

namespace TelegramBots.BotAlarm.Migrations
{
    [DbContext(typeof(AlarmBotContext))]
    partial class AlarmBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("alarm")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.AlarmLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AlarmLogs", "alarm");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.AlarmLogMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlarmLogId")
                        .HasColumnType("int");

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlarmLogId");

                    b.HasIndex("ChatId");

                    b.ToTable("AlarmLogMessages", "alarm");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.CurfewLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CurfewLogs", "alarm");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.CurfewLogMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<int>("CurfewLogId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("CurfewLogId");

                    b.ToTable("CurfewLogMessages", "alarm");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.DbChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InviteLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LinkedChatId")
                        .HasColumnType("bigint");

                    b.Property<int?>("SlowModeDelay")
                        .HasColumnType("int");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TelegramId")
                        .IsUnique();

                    b.ToTable("Chats", "alarm");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.ServiceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceLogs", "alarm");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.AlarmLogMessage", b =>
                {
                    b.HasOne("TelegramBots.BotAlarm.Domain.Model.Entity.AlarmLog", "AlarmLog")
                        .WithMany("AlarmLogMessages")
                        .HasForeignKey("AlarmLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramBots.BotAlarm.Domain.Model.Entity.DbChat", "Chat")
                        .WithMany("AlarmLogMessages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlarmLog");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.CurfewLogMessage", b =>
                {
                    b.HasOne("TelegramBots.BotAlarm.Domain.Model.Entity.DbChat", "Chat")
                        .WithMany("CurfewLogMessages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramBots.BotAlarm.Domain.Model.Entity.CurfewLog", "CurfewLog")
                        .WithMany("CurfewLogMessages")
                        .HasForeignKey("CurfewLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("CurfewLog");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.DbChat", b =>
                {
                    b.OwnsOne("TelegramBots.BotAlarm.Domain.Model.ValueObject.ChatSettings", "Settings", b1 =>
                        {
                            b1.Property<int>("DbChatId")
                                .HasColumnType("int");

                            b1.Property<bool>("BlockChatDuringAlarm")
                                .HasColumnType("bit");

                            b1.Property<bool>("BlockChatDuringCurfew")
                                .HasColumnType("bit");

                            b1.Property<bool>("BroadcastMessageDuringAlarm")
                                .HasColumnType("bit");

                            b1.HasKey("DbChatId");

                            b1.ToTable("Chats", "alarm");

                            b1.WithOwner()
                                .HasForeignKey("DbChatId");
                        });

                    b.OwnsOne("TelegramBots.BotAlarm.Domain.Model.ValueObject.ChatStatus", "Status", b1 =>
                        {
                            b1.Property<int>("DbChatId")
                                .HasColumnType("int");

                            b1.Property<bool>("BlockedDuringAlarm")
                                .HasColumnType("bit");

                            b1.Property<bool>("BlockedDuringCurfew")
                                .HasColumnType("bit");

                            b1.HasKey("DbChatId");

                            b1.ToTable("Chats", "alarm");

                            b1.WithOwner()
                                .HasForeignKey("DbChatId");
                        });

                    b.Navigation("Settings")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.AlarmLog", b =>
                {
                    b.Navigation("AlarmLogMessages");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.CurfewLog", b =>
                {
                    b.Navigation("CurfewLogMessages");
                });

            modelBuilder.Entity("TelegramBots.BotAlarm.Domain.Model.Entity.DbChat", b =>
                {
                    b.Navigation("AlarmLogMessages");

                    b.Navigation("CurfewLogMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
